@using Finance.Web.Handlers
@using MudBlazor
@inject IAppPreferencesHandler Preferences
@inject AppThemeHandler ThemeHandler

<MudThemeProvider Theme="_theme" @bind-IsDarkMode="_isDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <p>Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code {
    private bool _isDarkMode;

    private readonly MudTheme _theme = new()
    {
        Palette = new PaletteLight()
        {
            Primary = "#594AE2",
            AppbarBackground = "#594AE2",
            Background = "#F5F5F5",
            Surface = "#FFFFFF",
        },
        PaletteDark = new PaletteDark()
        {
            Primary = "#7B6FF3",
            Background = "#1A1A1A",
            Surface = "#212121",
            DrawerBackground = "#1A1A1A",
            AppbarBackground = "#594AE2",
        },
        LayoutProperties = new LayoutProperties()
        {
            DrawerWidthLeft = "260px"
        }
    };

    protected override async Task OnInitializedAsync()
    {
        _isDarkMode = await Preferences.GetDarkModeAsync();
        ThemeHandler.OnThemeChanged += OnThemeChanged;
    }

    private async Task OnThemeChanged(bool isDark)
    {
        _isDarkMode = isDark;
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        ThemeHandler.OnThemeChanged -= OnThemeChanged;
    }
}