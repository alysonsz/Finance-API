@page "/categorias/editar/{Id:long}"
@using Finance.Contracts.Requests.Categories
@using Finance.Web.Shared
@inject ICategoryHandler CategoryHandler
@inject NavigationManager Navigation

<MudPaper Class="pa-6 mx-auto" MaxWidth="600px">
    <MudText Typo="Typo.h5" GutterBottom="true">Editar Categoria</MudText>

    @if (_category is null)
    {
        <MudProgressCircular Indeterminate="true" />
    }
    else
    {
        <CategoryForm Model="@_category"
                      ButtonText="Salvar"
                      OnValidSubmit="HandleEdit"
                      OnCancel="GoBack" />
    }
</MudPaper>

@code {
    [Parameter]
    public long Id { get; set; }

    private UpdateCategoryRequest? _category;

    protected override async Task OnInitializedAsync()
    {
        var result = await CategoryHandler.GetByIdAsync(new() { Id = Id });
        if (result.IsSuccess && result.Data is not null)
        {
            _category = new()
            {
                Id = result.Data.Id,
                Title = result.Data.Title,
                Description = result.Data.Description
            };
        }
    }

    private async Task HandleEdit()
    {
        if (_category is null) return;

        var result = await CategoryHandler.UpdateAsync(_category);
        if (result.IsSuccess)
            Navigation.NavigateTo("/categorias?msg=Categoria atualizada com sucesso!");
        else
            Console.WriteLine(result.Message);
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/categorias");
    }
}